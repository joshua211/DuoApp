@page "/"
@inject IDuolingoClient client
@inject IValuePersistence persistence
@inject NavigationManager nav

@if(skills is null)
{
    <div>Loading skills...</div>
}
else 
{
    @if(skills.Any())
    {
        var i = 0;
        foreach(var skill in skillsToDisplay)
        {
            var color = i % 2 == 0 ? Color.Primary : Color.Secondary;
            i++;
            var link = $"/Learn/{skill.UrlTitle}";
            <MudChip Link=@link style="margin: 0.5rem" Color=@color Size="Size.Large">@skill.Name</MudChip>
        }
    }
    else {
        <div>No skills found!</div>
    }
}

@code {

    List<Skill> skills;
    IEnumerable<Skill> skillsToDisplay;

    protected async override Task OnInitializedAsync()
    {
        var username = await persistence.GetValueAsync("username");
        if(!string.IsNullOrEmpty(username))
            await client.Authenticate(username);

        if(!client.IsAuthenticated)
            nav.NavigateTo("/login");
         else
         {
            skills = (await client.GetSkillsAsync())?.ToList() ?? new List<Skill>();
            skillsToDisplay = skills.OrderBy(s => s.Name);
         }
    }

}